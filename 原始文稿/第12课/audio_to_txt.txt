上一节课我们讲的那个画图,大家基本上,因为上节课有几个同学阳了呀,我们为了避免这个传播,所以就线上了。 那么上节课大家有没有什么疑问呢? 后面我看于老师在群里面问说要有一个什么拓展练习是什么,对吧? 我们在上节课的课堂的展示当中,我们实际上是显示了一个数据,就是RT的数据,进行了一个显示画图。 然后我们上节课画的图,我找一下啊。 我们上节课最终画的一个图应该是这样的,对吧? 后面又可以把每个人的数据都可以连起来,对吧?每个人跨不同条件的,然后实际上我们是在每一个图都在不断的进行一个加一个图层,然后对它进行一个改进。 所以最后的话我们就能够相对来说比较好的显示这个不同的数据。 然后我们今天实际上就是要做一个更加宏观的一个整合了,某种程度上。 我们这节课内容实际上就是回到了我们这个课的一开始的一个副标题啊。 就从数据到可发表到手稿对吧?那么我们这就会就出现到一个手稿。 那么我们现在大家都已经比较熟悉这个markdown对吧?markdown的话就是以RMD结尾的一个文件。 那么在这个markdown里面呢,它可以以这个文字对吧?代码,然后进行缓和的编写。 那这样的话能够方便的把我们的很多内容都记录下来。 那么正因为RMD它有这么一个很好的一个优势呢,所以说那么就会有人想, 那我们是不是能够直接把markdown把它输出成为一个就是运行完了之后, 它现在一般来说输出是网页对吧?我们能不能直接把它输出成为pdf或者是word文档? 那么这样的话就能够直接的那个word文档就能够把所有的格式都排版好。 那这就意味着我们不仅要把这个RMD里面的传统的文字对吧? 然后代码编写,而且我们还会用它的格式进行一个调整。 像是它输出的格式是什么?我们要给它进行一个严格的一个调控。 然后另外就是说我们在写文章的时候,我们都会设计到参考文件对吧? 也就是说我们这个参考文件输出的时候也要直接的把它输出出来。 最后就是我们这个图片文字,它也应该是能够在图一个文章上对吧? 大家投稿的时候或者大家读作文的时候,我们一般都是既看到这个有文字, 然后有描述,然后也有这个可视化的这个结果。 那么我们现在我们今天讲这个包庇它就是适用于心理学的这个手稿的准备。 我们心理学一般都是用APA对吧?那么APA现在是第7版了, 它实际上是也在不断的更新,但是我们有的时候投稿的时候, 可能第6版第7版大家没有那么严格的要求对吧?基本上都是可以接受的。 所以我们这个叫做Papacia,反正大概又是这么一个名字。 它就专门为了适用这个目的,那我们先把这个结果, 就它输出完了之后一个结果给大家看一下。 大家可能应该已经在GitHub上面有下载了对吧? 那这就是我今天,就是我们专门为了这门课准备的一个Demo。 它就是一个PDF格式对吧?大家可以看到它是有APA的这个叫做Running Head, 就是你的小标题对吧?然后有正式标题,有作者,然后有单位, 然后有author notes对吧?然后还有你的这个,比方说通讯作者的联系方式对吧? 然后接下来就是摘要,关键词对吧? 然后还有你多少字,这个可能是APA的一个特殊要求。 然后就是正文,正文开始的话也是以我们的这个标题开始对吧? 标题之后你就是前言对不对?然后还有参考文献。 然后呢,就是方法对吧?方法从备释开始,然后到这个材料程序, 然后到数据分析对吧?最后到结果。 结果的话,你可能比方说不同的结果部分有报告不同的结果, 然后报告F值,P值对吧?然后有可能还要去,我们可以报告得更详细一点, 比如说这个Parsing Xsquared或者叫做Generalized Xsquared对吧? 然后还有效率量和他们的自行区间,然后比方说我们可能不仅要做一个 一个重复三两方的分析对吧?我们还要做简单效率分析, 然后把所有结果主要结果分析完了之后,我们会有一个讨论对吧? 讨论之后,然后就是这个参考文献,用APA的格式对吧? 然后APA的话,他的这个手稿的话是把图放到最后的, 那么我们把这个图呢也就比方说图1对吧? 它是什么样的,然后也放出来,然后我们的结果部分也引用图1对吧? 比方说我们说建什么什么结果,建图1对吧? 那也就是说我们能够通过Armarkdown里面的这个包对吧? 能够完整的输出一个PDF,那么只要我们把这个细节调控得比较好呢, 那我们应该是直接就能够把这个PDF提交的。 那我们今天就是要讲这个东西,那么第一步当然就是安装啊, 如果大家没有安装到包的话,那我估计就后面大家就相当于在听天书了。 所以我想先问一下大家包安装的怎么样啊? PDF都安装好了吗? 有没有没有安装好了? 都安装好了是吗? 好。 那大家有把我这个下载下来吗? 能在自己电脑上运行吗? 就比方说你下载了之后,你可能电脑上是类似于我这样的一个文件夹格式对吧? 然后我们还是继续比方说,我先把它关掉。 假设我们没有打开这个,没有打开这个Rproject, 然后我们在自己的这个文件夹里面对吧? 就双击这个R4Site对吧? 点Rproject,点这个,点完了之后呢,我们就能够,它就会打开对吧? 那打开之后的话,当然我们这里就有很多文件,我们打开第12张对吧? 就这个RMD文件,打开之后就是这个,然后呢,你点一下这个rand,neat, 就是这里有个芝麻线的这个小的一个logo对吧? 你点一下它,你点下它之后呢,它这个地方应该会有一个窗口, 就是叫rand,它就开始有一些处理,大家看到没有? 还有进度,然后最后就显示说有多少字对吧? 然后一大堆你看不懂的东西,我也看不懂。 然后就是最后就出了一个结果了,然后它跳出了另外一个窗口了, 跳另外一个窗口就比方说output created对吧? chapter 12,然后呢,还有这个PDF,那就完了。 我们这个时候我们可以看一下,这个PDF是最新生成的对吧? 我们看时间,就是18点44对吧? 就是刚刚生成的一个PDF。 大家如果安装了这个PAPIR,然后从来没有运行过, 但是你现在就可以运行一下,因为你在第一次运行的时候, 它还会要安装一些东西,不是说你下载好了, 就是可以直接用了,因为它第一次去处理这种PDF输出的时候, 以及面对的这个API的格式的时候, 它是需要额外的下载一些插件的。 这个基本上如果能运行的话,我们就可以很快后面就可以, 每次我们做点修改的话,就可以全部都反映在我们的PDF上面。 如果你输入了这个,比方说output created对吧? 就是你创造一个PDF,后面有的就是有点警告, 那是很正常的。 然后有的电脑的话,它运行完之后,它会自动跳出来, 这个PDF它就自动给你打开,但是有的是不会的。 至少我今天试用了两个电脑, 一个它会自动打开,一个就不会自动打开。 如果是最新这两天刚装的API的话, 可能会有一个问题就是,它要这个是0.39, 但是我们以前安装的可能是0.37, 但是它不会自动给你把它下载下来。 所以它告诉你,你看那个, 大家到现在为止应该要学会看那个报错, 它比方说没有在什么namespace里面找到xform, 就是说没有这个包对吧? 或者说它说这个包它需要的是0.39, 但是你就是0.37,所以它没有办法跑,明白吗? 所以你要先把,如果你直接安装, 它没有办法把原来覆盖掉的话, 你就先手动把它删除掉,怎么手动删除呢? 有个很简单的办法就是你点这个packages,对吧? 你找到这个xform,在这边拖,对吧? 然后找到之后,你用这边把它擦掉就可以了。 擦掉之后,然后再重新安装一遍。 这可能是一个常见的在Windows下面的一个错误。 稍微听我说一下,就是为什么这个, 大家现在碰到各种各样的问题呢? 因为Papilla它是一个很复杂的一个, 它虽然说试图把这个表面变得很简单, 但它本身是一个很复杂的一个系统。 也就是说它依赖于这么几个东西, 就是首先是那tab, 专门用来排版的, 然后它还依赖于这个bookdown, 我们说unmarkdown,对吧? 还依赖其他的一些,比方说我们运行R所需要的, 比方说我们这里面需要很多这个运行很多代码, 需要一些R包,那么这个是最难搞定的。 为什么呢?因为natx它本来就是一个专门用来排版的一个系统, 它自身就非常的复杂, 所以当时这个unmarkdown的开发者谢宜辉, 他为了解决这个问题, 他自己写专门写了一个包,叫做tidytex, tidytex这个R包就是为了帮助大家去解决natx系统的问题。 但是现在很多我们因为在国内受到网络的影响, 他的个人的网站tidytex也不好下载, 虽然说只有100多兆, 但是其实下载起来很慢, 有同学说要不我自己把自己补文件下载下来, 但下载下来的话也不好安装, 我自己也试过,它那个不太好, 所以最好还是通过那个语法, 就是我上午发到群里面的那个, 就是那个什么tidytex, 然后双号号对吧, 然后install那个, 你用这个命令来装, 然后如果说你的网络这个时候, 它可能会跳出一些命令对吧, 然后显示进度条, 大概走两三格之后就不动了对不对, 这个时候说明网络不行, 就是我们的网络受到限制了, 大家一定要科学上网, 必须要科学上网才能够去通过这个安装, 没办法, 我现在没有找到更好的解决方案, 我其实试图直接把它下载, 通过网页端把它下载下来, 然后在R里面去安装, 直接从那个原文加上去好像不太行。理论上讲应该是Install Packages 应该是有一个功能是可以直接 你把整个软件包下载到本地 然后直接Install Packages把它装进去 但是我试了之后好像也效果不太好 所以大家就先通过这种方式把Tidy Text 就是要用Tidy Text刷冒号 然后Install Tiny Text 那个命令把它装好 然后的话才能够运行后面的这个东西 这就是唯一的一个难度湖 后面其他都是我们R能够解决的 就是都是在R的生态系统里面能解决的 这个它是在 因为NetX系统它本身是一个 R生态之外的一个东西 它本身是那个 我不知道大家会不会有人 用这个NetX来写文章 就是作为它是一个很好的排版的系统 但是它本身有自己的语法规则 然后整个生态系统非常乱 有很多包可以用来去使用NetX 所以大家先 我相信大家都是研究生 应该都是可以科学上网的吧 要不然你怎么访问Google Scholar对吧 镜下广告那么多 这个能受得了吗 如果你的NetX成功安装以后的话 后面的基本上都是很好解决的 比方说像XFont这种R包的话 它本身是很好解决的 你就把它卸载了之后 重新安装一下就好了 但是如果NetX你下载不了的话 那就只能说卡在这里了 还有一个替代的方案 就是说我们用其他的解决的 那个超级大的一些东西 比方说大家可以搜索一下 一个叫做MicroTex的一个 它应该是自身是一个工具包 如果大家就是说你实在是发现 你没办法使用TileTex的话 你也可以考虑安装这个 但是我们可以看一下它非常大 还有一个问题就是 这个MicroTex它不知道它就是 它的兼容性现在跟这个 Bookdown的系统怎么样 但是如果大家实在是下载不了 TileTex的话可以 就把这个作为替代方案 当我们第一时你把ITX安装好之后 第一时运行的时候 它会不断的安装新的东西 它就相当于是你 比方说你有一个东西 要去运行生成APA6的格式的时候 它会先要下载一些主题的一些内容 你可以这么理解 它要先下载一些APA6的模板 所以你第一时运行的时候 它还会继续不断的去安装一些东西 但是其实你运行的时候 它给你安装东西的时候 这就是一个很好的一个状态 说明你前面都装对了 刚刚有个找不到的就是 假如大家是Windows的这个机器的话 下载Zip之后 实际上可以有一个 TileTex的一个命令 可以直接从这个Zip来进行安装 这样快很多 那同学马上会把 会把命令发到群里面 大家看一下群里面 大家看一下群里面 就是说 安装TileTex之后 直接用TileTex里面的一个install prebuilt 然后pkg.unix.com 把那个路径下来的 这个我之前就没有尝试了 没有尝试这个命令 如果这个命令可用的话 应该是还是比较好的 因为Zip文件 我们最多再给7分钟 大家尝试这个装这个拍摄一下 然后我们这个 下边的我都没拍下 我刚才发现就是TileTex 它居然会有一个是 要安装在大家自己的用户名 下面那个文件夹 它有可能会识别不了 大家的中文的用户名 我不知道是不是中文名的问题 刚刚有个同学是 他的用户名是中文 所以说最后导致了一个 TileTex的某一个特定的工具包 是无法运行的 所以我强烈推荐大家 如果有机会的话 一定要把自己Windows的用户名 改成拼音 千万不要用中文 你就不知道什么时候 它就会报错 你现在是给自己埋了个雷 好那我们就先接下来往下讲 我看有一些 应该至少有一半的同学 已经成功的安装了 我们不管现在能不能 nit 把它变成一个PDF 但是我们可以先看一下 RMD文件的一个结构 首先它这里有一个三个短线开头 然后以三个短线结尾的一个部分 这个叫做yum 你可以把它理解为 它是关于我们文档的一些属性 就是说你这里的信息就是关于 就是让Papier它后面如何来处理文档 比方说我们看一下 这个文档的title对吧 就是一般来说 类似于是我们这个标题 那这个很方便 就是直接可以我们 把自己的标题放到这里对吧 然后短标题是什么 而且它这里还是支持markdown的语法的 比方说我们这里Papier有个协体对吧 它后来显示出来的就是一个协体 我们可以看一下 我们现在来对照来看 大家可以看到我们Papier它是协体对吧 然后作者对吧 一般我们的每个文章都有 都会有自己的一些作者 然后有通讯作者 然后affiliation就是你的单位对吧 有ER 基本上每一个作者你都可以 比方说都可以写自己的姓名 affiliation的顺序对吧 correspondent的话就是是不是通讯作者 那么它这里默认的是只有一个 然后就是你通讯的地址 email 然后你的role 就是说你的contribution是什么 这contribution它是按照叫做最新的 一个credit的系统来写的 大家要参照credit的系统来看 这里有哪几个大类别的一个contribution 然后你可以写 当然我这里全部都是演示 然后第2个作者对吧 然后它的affiliation 它的role 因为通讯作者只有一个 所以说它只会显示一个 只有一个作者要显示这个东西 然后前面的affiliation 就是你的单位都是编号对吧 那么后面的话 专门有一个affiliation的一个 就是一个就书写它的地方 这里的话它id就是对应的123对吧 然后你的单位具体对应的什么 然后可以写下来 这样的话就很方便 然后author notes对吧 就是这个是APA的一个 其实是APA的自己的一个特色 不一定每个学科都会用 这个author notes就是说 你有没有一些额外的信息 要加在这里对吧 比方说有的我们在APA里面 常看见的就是说 我这个结果之前在什么会议上面 以poster形式展示过对吧 它会写出来 然后有的他会说我这个文章 它实际上是谁的毕业论文的一部分 他可能也在这里写出来 然后其他的大家都 就是有的想写的可以写 比方说有的说我们这个基金 受到什么支持什么的 也是有可以写在这里 然后就是摘要对吧 我们可以回看它的一个pdf 这个author notes就是 它还是在这个title页 就是说我们称之为 它是一个第一页里面的内容对吧 第一页出了这个文章的标题 然后这个作者信息以外 就是你的一些额外的信息 还有这个通讯地址 这基本上就是第一页的所有的内容了 然后第二页就是这个abstract 我这里就是完全是为了 就是说为了给展示 所以我没有把它写的特别的清晰 实际上你不需要分段对吧 你的abstract一整段就可以 一般来说学生文是这样的 然后还有这个就是说 在我们这个 Armageddon里面或者是Papilla 这个它的这个格式里面 如果你用这样的一个符号 开头和结尾 它表示这里就全是注释 它不会把这个地方 最后把它放到这个pdf里面去 所以大家可以看到在摘要和keywords 对吧和关键词之间有这么一段话 但是在这里面是完全没有的 对不对 然后这个word count对吧 就是你有多少个字数 那么在很多期刊的这个 头文我要求它是需要你多少字以下 对吧 那么所以你可能需要记数多少个字 多少个单词 那么我们这里的话 因为文稿可能没有写完 对吧 这里就暂时不用填写 那么如果大家可以看到我们这个 我们点击neat之后 它其实会告诉我们这里有多少个字 对吧 比方说这里636个字 在text body里面对吧 还有什么多少个字 在这个186个字 在这个reference里面对吧 它会给你写出来 你可以把它直接放在这里就可以对吧 然后就是参考文献 参考文献的话 这个文件名都是自己可以改的 就是你要全到处保持一致就可以了 我们这里用了两个 一个参考文献是 一般来说它是这样的 就是rreference.bib对吧 它就是那个叫做 bibliograph它的一个缩写对吧 这是在图书馆学里面很常见的一个格式 那么这个实际上是用r自己生成的 那么另外一个citation.bib 前面的这个短横线之前 就是我为了让这个文件好分辨 那全部是属于12张的对吧 这样的话就是我额外加的 但实际上如果你自己是写项目的话 你肯定就不用加这个东西了对吧 你就直接是rreference.citations就可以了 那么这个rreference和citations里面 这个rreference这个是直接可以 我刚才有个同学 他这里出了报错了对吧 你可以把它全部删掉没关系的 因为它是自动可以给你生成的 然后这个citations它是我们额外自己要引什么文献,然后你就可以把它放在这里。 那么大家可以看到它是用叫做 它也是用NetTag的一个语法来去 建成这个参考文献的。 那么它这里的应该是叫做 BioTags还是什么,这个在大家如果用一些 文献管理软件的话是很容易导出这个格式的这种信息的。 比方说你用Zotero或者用 用EndNote都很容易导出这个东西来。 那么你导出来之后,只要把它粘贴到这里就可以了,对吧? 它最主要的信息就是说它的内容是什么, 比方说Article还是什么别的Book,对吧? 然后这里就是它的一个独特的一个ID, 然后后面就是它的比方说Title, 然后期刊什么的这些信息,对吧? 这都是平常我们都能看得到。 因为我们这里没有引用,我们这里就是做一个示例,对吧? 就引用了两三篇文章,所以就没有太多的信息就放这里。 然后这个就全部是R-reference, 就是全部R帮我们生成的一些关于工具包的一些内容。 那这个地方在这个投文件的这个地方,我们就要告诉这个 Harpia,我们的参考文献它最终的来源于哪两个 类似TXT的文件夹,对文件,对吧? 它会从这里面去找我们的参考文献。 然后其他的什么floating text这个我们可以不管, 然后这个9 number,对吧? 就是说你的大家可以看到就是 APA它和它有一些很繁琐的格式啊, 然后你的每一行对吧?它给你是不是要标号? 你看我们这每一行都标号,对吧? 那么一般来说呢,审稿人会喜欢这种方式, 因为审稿人这个时候他可以直接告诉你你的哪一行, 我觉得有问题,你哪一行需要修改,对吧? 所以这个是很方便的,所以一般手稿的话我们是 他会希望你把每一行的数字给标记出来, 然后其他的话没有什么,然后最后一个值得注意 就是说这个manuscript output, output的话就是PAPI,APA new的PDF, 这是它目前为止的话最稳定的一个, 所以我们一般就用它就好了, 然后再三个短横线对吧? 那么就这个头文件,这个头前面的部分就结束了, 大家可以看到,那么这些东西就是说它只是我们写指令, 实际上就我们在这里可以写指令,写完指令之后呢, PAPI这个包就全部帮我们处理后面这个东西了, 我们不需要管后面的东西,大家想想, 如果你自己要去排版的话就意味着什么? 你的每一个细节都要自己进行操控,对吧? 它这里就是直接用NATAC, 我们说这个NATAC的排版是把APA new的全排好, 你只要告诉它各个相关的信息在哪, 它就把你这个做为输入,然后给你进行排版。 这个就是前面这个部分,那后面的话我们就是跟, 假如说我们是要做数据分析以及写内容的话, 那就完全是我们自己后面就是平时跟写自己的数据分析代码一样, 只不过说我们这个地方的话,我们就把这个前沿加上对吧? 比方说我们首先就是把这个检查一下自己相关的软件有没有装对吧? 然后把这个ref,就是说R的这个reference的文件把它放到这里, 就告诉这个R reference对吧? 就是我们引用R包的这些reference, 这些citations应该放到哪个文件? 然后我们就可以开始写前沿了, 比方说这里的话其实就是,我这里因为写的是跟我们课程相关内容对吧? 我就是随便写了一些内容,然后就是前沿的部分了实际上, 你就可以在这里一段一段写文字了,就不用再管了。 那比方说你用协体,那看到这个地方我们有的第一个引用对吧? 那么第一个引用就是实际上就是alphaP,对吧? 那么它实际上就是引用的,大家可以看到我们看这个R reference里面对吧? 它这里就有一个alphaP的一个标识对吧? 它对应的就是这个参考文件,大家看到没有? 也就是说我们这个地方,你用一个中括号对吧? 然后加上一个at的符号对吧? 然后加上每一个文件条目它的一个独特的标识, 这个标识就是在这个中括号里面,不是,大括号里面。 那这样的话你就可以引用它了。 然后比方说我们说这里有第二个引用对吧? 就是我们这个数据从哪来的? 那么我们可以看到这个地方呢,它是从我们这个citation来的对吧? 这我们自己创造了,我们自己创建了一个参考文件,一个参考文件。 那么同样它也是在这个at article对吧? 就是这个文件类型后面的大括号的第一个独特的标识, 然后把它放到这里,那这样的话它就会变成参考文件, 那我们看一下pdf里面是长什么样的对吧? 我们看pdf这里面,我们前面写的东西就相当于是我们的前言了对吧? 它就变成了这个title后面之后的这个前言的这些话了, 然后我们前面说Papilla这里有个引用对吧? 它就是引用在这里了,第一个参考文件, 然后我们第二个参考文件对吧? 就是我们说的这个数据来源,它就在这里了。 然后它变成是API的格式对吧? 然后第三个,我们第三个就再次引用了前面这个文章, 但这个时候我们把它是没有加中国号对吧? 没有加中国号就是意味着我们把它当做句子的一部分, 这是API里面常用的另外一个引用的方式对吧? 也就是说我们实际上就是以这种方式呈现对吧? 作者,然后加年份,就表示说它是一个文章对吧? 而不是把它全部放到括号里面, 只有把年份放在后面对吧? OK,这是我们的前言对吧? 那前言完了之后,我们接下来是不是就是要开始做数据分析了对吧? 那么数据分析的话,大家想一想,我们前面讲了很多, 基本上都是讲R的数据分析对吧? 那么当我们正式来分析的时候,实际上我们要做的是什么? 就是把我们,就相当是要把我们前面探索好的数据, 把它放进来对吧? 那么大家想想,我们前面上的课哪一些部分是有用的? 我们讲数据探索那个部分,其实没有太大的用处对吧? 我们不会把它放到这个字子文章里面, 因为探索的话其实是很乱的。 那么我们从这个地方开始对吧? 就相当是我们已经通过,比方说我们自己先前已经写了几个R Markdown, 然后我们探索了,我们已经知道我们在这个文章中, 我们会用什么数据分析对吧? 然后我们就开始比方说,我一般会有这个操作, 就是把全部的以前的一些数据全部清掉, 然后这样的话避免出错。 然后就开始漏了这个数据对吧? 这都是我们之前已经在课上讲过的。 那么这里的话,我们是完全采用了这个, 就是我们那个文章中排除数据的办法, 那实际上就相当是我们已经有自己明确的数据排除的标准对吧? 这个前面就是数据预处理的部分, 比方说读取数据,然后把那个, 把那个不同条件组合把它分开对吧? 分开了之后,把它的数据内心进行一个转变,把它变成那个Fact, 然后并且把它这个Level是我们自己进行规定, 这都是在我们数据预处理的部分对吧? 这就是我们前面讲到的,用到这里了。 然后我们去看一下,要不要排除某一些, 根据我们实验之前的一些数据排除的标准对吧? 我们是不是要排除某些标准? 比方说我们这里看到就是说, 有一些试试的标准它是不符合的对吧? 比方说它的这个试试比较少,或怎么样? 它可能是在做实验的时候,它没有做完对吧? 我们就把它排除掉。 然后另外比方说它的总体的证据太低了, 然后我们把它排除掉。 那我们就从这个数据里面去算出它的总体的证据率对吧? 然后把它排除掉。 然后第三个标准,比方说它有一些条件, 它的这个accuracy对吧? 完全是0,那我们也把它排除掉。 那最后的话,我们把所有按照各个条件所需要排除的base对吧? 把它全部放到一起, 形成一个需要排除的base加的一个一个vector。 然后我们再对数据进行重新筛选对吧? 就是所有的刚才那些需要排除的base的数据全部给, 全部要排除掉。 然后呢我们把这个trial的这个也要做一些排除,就是 就这个地方我们是只选了它要么等于0,要么等于1的对吧? 也就是说它没有做反应的一些事实就没有,没用了。 那这个当然大家可能就是说我没有做反应的事实, 我可以认为它做错了对吧?那也可以。 只要你自己前方保持一致就行了, 这里只是说我们大概是怎么排除数据的。 然后最后就是看,比方说你这个地方, 排除了多少个试试对吧? 所排除这个试试占的比重有多大? 你可能一般来说是要报告的,所以你把它写出来, 算出来,然后后面方便报告。 然后这个地方的话,我们也直接从这里提取到base的信息对吧? 然后这个是数据,我们把base的ID、年龄、性别选出来对吧? 然后我们用distinct这个命令去找到它们每一个, 就是这三种组合形成了一个独立的, 就是独立的排列组合对吧? 那么这样的话,其实最后就是什么? 每个base只有一个年龄一个性别对吧? 然后我们把它所有的base的信息进行一个综合, 就是有多少个base对吧? 有多少个女性,有多少个男性, 然后它的平均年龄是多少? 我们可以通过summarize来进行一个总结对吧? 然后这边的话,比方说我们是把上面是所有的数据对吧? 我们下面就是有效的base的数据, 我们做同样的操作对吧? 这样的话我们就可以得到,我们可以看一下, 其实我们这里的话就得到了是什么? 就是关于这个数据本身的一些, base本身的一些信息对吧? 它是只有一行的, 你能想,我们可以运行一下看看。 我上面好像还没有运行,我从上面开始。 我们可以看到就是,最后总结出来就是每一个, 这种基本信息里面它就是这样一个数据对吧? 有多少个base,多少个女性, 然后多少个男性,平均年龄是多少? 那么这个有什么用呢? 我们后面大家可以看到我们, 在方法部分我们需要报告对吧? 比方说我们这里最后有多少个base参加了实验对吧? 然后有多少个base被排除掉了? 排除之后的话有多少个有效base, 他们的信息是怎么样的? 这个信息就可以直接我们把它报告了。 那我们怎么报告呢? 这个地方我们可能就是, 然后我们如何招募base怎么样的, 这个都是没有什么太多问题对吧? 我们这个地方就可以引用我们前面获得的信息, 也就是说我们如果说大家要保证精确的, 就是说可存不信的话, 我们基本上可以在文章里面就引用上面的一些数字对吧? 比方说我们说就是全部的base有多少, 那么我们就直接引用刚才那个base基本信息里面的subject number对吧? 那么我们就直接可以用两个间号, 然后把它作为一个就是引用数据的一个语法, 然后以R开头表示要从这个R的里面, 以R的语法来调用数据对吧? 然后这个df.mbase, 就是说这个是我们刚才存我们整个base信息的一个数据框, 然后把这个subject引用过来, 所以它最后变成了一个数字对吧? 那么这个数字就会成立在文档当中, 同样的话我们也可以引用有多少个女性对吧? 然后她们的年龄是多少? 然后这个地方的话我们用了一个就是写公式的一个写法, 就是这是R Markdown里面另外一个很好的, 就是大家可以看到我们放了把鼠标放这里的话, 它会给我们显示这个符号表示是什么对吧? 它表示就是加号和减号, 就是加减号这样的话表示就是前面的是均值, 然后加减它的SD对吧? 这样的话就很方便, 那么这个地方我们可以稍微再展开一点, 就是以在markdown里面我们以两个美元符号作为一个, 就是开头和结尾的话, 表示这里面都是公式, 那么公式的话它会非常方便的, 就是如果你的公式比较多的话, 用这种方式绝对是非常方便的, 比你在word文档里面就是手动的插入公式要方便很多倍, 那么我们今天就讲到这里,谢谢大家收看,再见!它的调控是非常的精确的 比方说我们前面对吧 我们前面这里引用了我当时文章中的 一个停止收集数据的一个标准 就是说base因子 比方说这个是小于等于0.1对吧 大家可以看到它这里就是用公式写的话 它就写的是这种完全是写公式的那种字体 它最后输出来的话是很跟其他的文字部分 是很明显不一样的 然后这边的话也是如此 然后它里面的就是说在输入公式的时候 它的一些特殊的符号在前面都会加一个斜杠 表示它是以一个特殊的符号来出现的 比方说我们这里一个特殊符号GE对吧 就表示greater or equal 就是大于或者等于对吧 这个一个斜杠PM表示叫做plus and minus对吧 就是加减 比方说每一个希腊字母它会对应一个自己的符号 这样的话我们写公式的时候就只需要用特殊的符号 然后加上各种各样的markdown的语法来写的话 最后就非常的规整 那这就是方法部分 我们如何比方说我们在部分的结果部分对吧 如何去引用R里面的数据 实际上就是很简单一个阶号然后一个R 然后后面加上我们内存里面的变量 就可以把这个数字直接穿插到我们的文档当中 然后后面的我们就比方说介绍实验材料 这个什么我们就不用说了对吧 这就是大家正常写自己的语法 写自己的正文部分就可以了 然后数据部分的话它可以自动的帮我们去引用这里 这里就是引用了什么样的R包对吧 它实际上也是调用R的语法 大家如果有注意到的话 首先是以R开头对吧 然后就setR,setR是一个专门的命令 那么在这个setR里面呢 我们首先这个文档从哪里来对吧 就是把它关联到我们刚才的那个 引用R的那个BIB的那个文档里面去对吧 然后这个PKG就是我们要选出哪一些 我们关注的这些这个R包 然后withhold等于force就是说我们 把我们选出来的这些包做白名单 就是说我们要对它们进行引用 如果我们把这个地方withhold改成true的话 就是这个就变成黑名单了 就是标在这个markdown里面就不引用 那么我们一般可能是withhold等于force 就是开白名单会比较好一点 大家可以自己试一下 如果说你可以把neat出pdf的话 为什么呢因为它其实会把所有 比方说你gplot我们就tidyverse对吧 tidyverse它可能会 它里面有依赖很多包 它可能会把那些依赖的包都引用出来 那么它会可能有十几个包二十几个包 那么可能对我们来说 这比方说我们就用了1234567个包对吧 加上RBASE就是7个包是最主要的 我们就引用这7个包就可以了 那其他的它所依赖的这些包我们就可以不管了 虽然说可能管是最好的 因为这样的话对这些依赖的包也是一个尊重对吧 但是有的时候这个参考文献也是 这个数量也是限制的 所以我们也可能做一些筛选 那实际上这就是我们写论文的一个结构对吧 然后我们就写结果 那么结果的部分的话 那我们就意味着要先做统计分析对吧 那么先做统计分析的话 就是我们先需要自己 知道自己做什么统计分析对吧 那这个地方比方说我们要做这个d'的分析 信号减存论的这个d'对吧 所以我们先需要 把每个base在各个条件下d'求出来 那么这个地方的话实际上就是我们之前已经算过的对吧 我们在数据运输里的时候我们讲过这个语法对吧 把每个base然后按照它的这个 图形的身份和Valence进行分组对吧 然后按照这个match和mismatch的这个 情况把它分成要么是hit 要么是force alarm 要么是miss 要么是correct rejection 然后最后来算出它的这个d'出来对吧 然后最后ungroup 这样的话我们就得到了 比方说我就在这里运行一下 这样的话我就得到了每个base在多个条件下的它的 这个d'的值对吧 比方说这个7034这个base对吧 它就有4个d'的值在4个不同条件下 2乘2 4个条件下面的一个值对吧 那么我同时也可以求出它的整体的 这个是科曼指错了 求出它整体的一个情况对吧 比方说我们就把它的 全部的整体的值求出来 那这样的话它其实就只有4个条件对吧 就是跨base的一个值 我们上一节可以讲画图的时候 我们实际上就是用这种group水平的这个值对吧 它的均值它的SE来进行画图 那么这个时候其实我们也需要对吧 为什么因为我们接下来也要画图 所以我们先把这个数据准备好 然后我们同样对RT对吧 我们也做类似的一个事情 我们也把它求出每个base的一个水平的 在每个条件下的一个值 然后也求出它的一个总体的一个值对吧 这都是我们前面 其实都是我们前面学过的代码 然后我们也可以把这个 比方说可以把它们两个合并 这个当然其实合并也可以不合并也可以 也取决于大家如何画图 如果你希望把RT和这个ACC 和D'的图你用那个facets来画图的话 你就把它放到一个长的一个数据框里面 就是你画一个图 然后把它分不同的facets不同的面板对吧 但是我们现在有这个patchwork 其实很好很方便拼图 所以我们拼图也是一个很好的办法 你也可以不把它进行数据框的合并 那比方说这里的话我们就进行拼图了对吧 然后我们上节课讲到就是说 我们除了画这个group level的这个均值和SE之外 我们还要把每个base的平均的这个RT 或者D'也画上去对吧 这样的话给我们一个更加全局的一个信息 那么我们所以也要把这个每个base的 专门为每个base准备一个画图的一个数据框 那么最主要需要准备的就是什么 就是我们要准备那个jitter对吧 就是要把不同条件把它放在不同的 X对应的不同的位置 所以这个时候我们就专门用case when 生成了一个条件对吧 比方说第一个条件是goodself对吧 它就是在1的左边一点点对吧 然后badself在1的右边一点点 那就是我们形成了一个手工的进行一个jitter对吧 那么把这个手工的就是把它的这个相对 就跳跃一点的位置错开的这个位置设置好了之后的话 那么我们上期可以说到就当你的点和线 你要让它一起来去以同样的方式来进行变动的时候 你要先提前就是把它position dot把它先拉出来对吧 因为拉出来你先运行之后呢 它的位置就固定了 然后你再把它放进去的时候呢 它的点和线就不会错开了 那么这些所有的数据是为了做什么呢 就是为了我们画把这个图先画出来对吧 然后我们把上面运行一下 然后这样的话我们就可以把第一个图画出来对吧 第一个图画出来之后的话 我们可以查看一下它是不是我们想要的样子 大概是这样的对吧 看起来是跟我们的看起来是我们想要的 但我们可以在这里把它放大 那基本上就是我们之前的反应时间了对吧 相当于是它既有每个base的数据 就是背后的黑色的点对吧 也有这个总体的数据 当然这里面的图层叠加 我们先把group的数据叠加好了 然后再放到先把group的数据放好了 然后再叠加了base的点的数据 所以大家可以看到我们个体的数据 实际上是把那个主水平的数据压起来对吧 我们其实可以把这个图层换一换 就是说要把这个主水平的数据放到最后最上面 这样的话其实会更显眼一点 大家可以后面考虑自己把这个图层进行调整调整 那么这个调整的话实际上就是把这个加号的顺序相对调整一下而已 很简单就像我们PSP图一样 那我们把RT的画出来对吧 那么我们把D'的也看能不能同样的画出来对不对 那我们刚刚画的是RT那么D'的话实际上也是一样的 我们需要把每个base的数据也是手工的进行一个Geta对吧 这就是我们以条件为基础对吧 生成一个数字 那么然后呢 这个地方有一个小的一个小的一个trick 但有的时候很好用啊 就是我们如何去让自己的X轴或者Y轴上面有一些 单个字母或者一个数字是协体的 然后有的时候你那个像我们D' 就是在这个信号简称的这个D'一般来说我们是以它 它都是来协体的 那么我们怎么写这个协体呢 我们要用expression这个函数 用expression这个函数 然后呢比方说用paste paste就是把它把字符串连到一起 那么我们这个时候做的是什么呢 就是说sensitivity对吧 它就是那个D'下面的那个敏感性 然后括号D'是协体的 然后反括号它又不是协体的对吧 所以我们把这个只有需要协体的这些放在这个 italic就是协体的那个命令下面对吧 那么它最后形成一个整体就是说 sensitivity括号 D'协体然后反括号对吧 那么我们形成这个之后呢 我们就把它放到这个画图的时候用label对吧 这个label y就等于这个前面这个expression的这个结果 那么我们可以把它 其他的都是一样的了对吧 其他的就是跟画这个RT的是一样的 我们也可以看一看 刚忘记运行它了 大家可以看一下这个时候它的这个D是协体的对吧 有的时候我们就需要这种小的这种比较精确的一个操控 然后其他方面的话它跟我们的这个RT基本上都是一样的对吧 但是它的这个外轴是很不一样的 它的这个比方说我们看到是1234对不对 然后呢我们就可以把它拼成一个图 拼图的时候我们用patchwork对吧 patchwork我们把前面的是把D'放左边把RT放右边对吧 然后这个加一个annotation就是说每一个panel 我们给它用什么来表示那么我们这个地方就tag level 等于A就表示从ABCD来表示一个一个的那个指图对吧 然后最后有一个有一个plot layout就是说它怎么进行排布 我们说nrow等于1对吧 就是两个图变成一行就相当于左右分开 然后呢byrow等于去就是说它它以列来进行排布 就先走完一行 然后再去走到下一行就是byrow 你bycolumn就是说你先走一个column 然后再走下一个column 然后这个guides等于collect就是说 不同的图的它的这个图例 我们是不是把它全部放在右边或统一放在左边 我们这边显示是connect就是把它统一的放起来 那么我们可以看一下就是在这种情况的话我们 我们先 我们把这个命令放到这个地方来运行 这样我们可以在右边的大图里面看到它 这个电脑有点慢 那大家可以看到我们 这个它就会有A和B两个指图对吧 那么A和B都有自己的外周上面的一些文字 然后都有下面的都是有这个except for other对吧 然后最后的图例都收集到了右边来了对吧 然后大家可以看到这个文字 就是这个字体是相当大的 为什么呢因为我在这个Papilla 这个theme API里面把这个文字base size等于25,它的默认实际上是8 然后这个base family就是说它的字体对吧 字体是family是什么,是用times 所以我们说的是times new roman这个方式来去呈现 而且呢它最后的这个图 它看起来相对来说字体也是比较大的 因为我们不仅要在R里面看对吧 我们最后要看它在文字上的一个效果 所以即便大家可以看到我们用的是25号的字体对吧 在上面输入了25,但是它相对来说还是没有那么大的 所以就我们看到的我们在PDF里面看到的 相对是这么一个图,它拼到一起 然后这个地方大家可以看到它有一个图的名字对吧 这个图的名字它在哪写呢 我们就直接在这个 我们可以看一下再回到这个R Markdown里面 实际上我们是首先画好了两个图对吧 画好两个图以后呢 我们在拼图的时候专门用一个小的代码框来去 特别的用来就是拼图这个目的 然后来呈现图片 我们这个地方就是在这个R Mark 就是我们说这个chunk里面 加上这个fig capture对吧 就是说这个图的这个标题 就是fig.cap然后等于什么什么对吧 其实很长 当然如果你的非常长的话 你感觉写在这里很丑 其实应该也有其他的办法 我记得有其他办法 可以搜索一下怎么解决 然后这个fig的这个高度宽度是什么样的 然后warnings要不要就是有一些警告 你要不要把它显示出来 一般来说有的时候画图的时候它会有一些warnings 它会有一些警告 最好就不要把它显示出来 因为当第一遍你自己画图的时候还是要看一看 到底是什么warnings到底重要不重要对吧 因为有些warnings可能它是比较至关重要的 比方说它有一些数据没有显示完整 但是如果你发现这个warnings 它是没有那么至关重要 你就把它给忽略掉就好了 然后我们还发现就是这个地方有一个rplot1对吧 就是有个chunk 这个chunk的名字它就是这个plot1对吧 那么我们后面可能需要引用它 比方说我们可以看到 我们自己在这个结果部分我们会引用对吧 稍等一下 然后我们报告完了结果所有的统计结果之后 我们说建图1对吧 cfig1 大家可以看到我们把数据放下来的时候 它会有一个超链接对吧 超链接上来的 为什么呢 是因为我们在这个文章形成的时候 实际上就是有一个超链接 那么我们是怎么引用它的呢 我们可以看到这个结果部分 我们这个是括号对吧 反括都是一样的 然后这个cfig 然后fig后面就是用一个斜杠对吧 它有表示特殊符号 然后at然后ref然后fig 冒号然后plot1 这个地方plot1就是我们刚才对应的 这个r的代码框的一个名字 大家可以看到前面的archang 这个地方plot1对吧 然后它跟这个地方是对应上的 也就是说其他的这个地方它都是语法 它都是引用图的一个语法 OK 那我们现在是搞定了它的相对是图对吧 我们画图可以把这个图展示出来 并且按照API的格式放到最后了 那么现在就是数据分析的部分对吧 那么数据分析的部分的话 我们按照我们需要报告的情况进行分析 比方说我们第一个我们要报告d'对吧 那么d'的话我们是需要做一个allova 那么在倍适水平做一个方向分析对吧 那么这个时候我们当然可以有多种做法 但是我尝试了用Blusa的包 但是我发现它可能因为Blusa它自动会输出一些结果 它可能它自己要输出一些结果 而Papier它要的是什么 要的主要是就是你内部的一些结果 它不希望你输出太多 所以它有可能会相互之间产生一个干扰 所以我们就直接回到更加原始的一些R包 比方说我们在做方向分析的时候用FX FX的话它实际上是一个非常复杂 非常灵活的一个用来做实验的方向分析的一个包 那么FX里面有一个就是最符合我们传统做SPS 熟悉SPS的套路的同学所用的一个 function就是叫做allova1z 那么为什么说它符合呢 因为这个地方就是数据对吧 然后ID每个base的ID是 哪一个column表是base的ID的 然后dv对吧dependent variable是什么 然后within对吧 就是within subject independent variable对吧 然后是这两个 所以它这非常符合我们的传统的习惯 当然FX里面也可以用其他方法 比方说你用混合线性模型来做 或者用回归的方式来做都可以 但这个是最符合我们的习惯了 所以我就这里把它写到这里 但是欢迎大家去探索其他的方式 我觉得你知道其他的方式是非常重要的 比方说我们这里可以运行一下 那么运行一下之后呢 它直接保存到这里了对吧 我们其实可以看一下这个结果 我们可以看到它直接就给出了我们一个 非常熟悉的一个方大分析表对不对 那就是每个效应 然后它的这个df1是4对吧 然后它的mse然后f值 然后generalized eta2然后p值对吧 然后这个时候我们发现交互作用是显著的对不对 那么在按照我们的传统的习惯的话 交互作用显著的时候 我们就基本上不看主效应了对不对 那么我们就直接去做简单效应分析对吧 简单效应分析的话我们用这个emis去做 然后呢我们直接把这个alpha的结果放到这里对吧 然后用valence就是看valence的效果 然后dependent on就是用identity来进行分组对吧 所以这个时候我们可以直接看后面这个部分 看它的结果是什么 我们这样看的话 这个简单效应分析实际上就是以自我和他人来分组对吧 然后在每个条件下看valence的一个效果 那么我们可以看到在自我的条件下 它们的差别很大对吧 然后一个是好的是2.5差的是1.99是2对吧 那么在他人条件下就两个相差 相比来说的话这个差距就小了很多 那么我们也可以对它进行一个检验对吧 就是用pulse 就是用pulse这个命令对刚才那个简单效应分析进行检验 然后我们可以直接看pulse它的一个结果 我们前面要先把它运行 把它装进去 然后我们看pulse的话它会分别对自我和他人两种条件下 进行一个统计显著性检验对吧 然后就发现在自我条件下 它这个是有显著性的结果的对吧 统计上显著 然后在他人条件上没有这个统计上显著对吧 然后我们就进行一个报告 那么这个时候我们就在结果部分 我们前面讲的是如何分析数据对吧 那么在我们这个PAPI-EL的这个RMAPDAN里面 我们就直接就是把结果立刻就写成文字来进行报告了对吧 然后这个地方我们用了一个二级标题对吧 两个简化表是二级标题 一级标题是什么是results 那么在这个二级标题第一个就是sensitivity d'对吧 然后我们就做了一个虚位的repeated measure loba 然后发现了一个显著的交互作用对吧 然后我们接下来就进行了简单效应分析 然后发现在自我条件下 good和bad有显著的差异对吧 然后没有发现在他人条件下 good和bad就有一个差异 然后就报告我们的结果对吧 就完了 然后同样对RT来说的话 我们也可以做类似的分析对不对 然后我们也可以写类似的这个画 那当然了我就没有写完 因为这个对大家来说都不是难题 然后把这个地方比方说RT的这个地方补充完成之后 那我们这个RT和d'的分析就完成了对吧 然后接下来我们就可以开始讨论对吧 我们比方说这个结果有什么样 诸如此类的对吧 最后就是这个参考文献 然后我们的这个 就是假如说我们最后知道自己怎么写这个discussion对吧 然后写完了之后 那我们再去neat一下对吧 他基本上整个文章数据分析完了 然后文章也写完了 然后PDF也生成了 所以这就是Papier他给我们带来的一个好处对吧 就是我们所有的东西都放在一个文件夹里面 然后都用RMAP单来统一来进行 而且我们的数据分析基本上 都可以在一个文档里面完全完成 所以这是为什么他的这个会受到推崇的一个好处 最近我又看到有些人说他开始使用这个之后 他就再也没有使用其他的一些 再也没有回到Word文档的方式了 因为他确实是很方便 我们看这边RAND这个地方没有出错对吧 他最后告诉我们创建了一个PDF 然后我们可以看一下 他又刚刚又重新生成了一遍对吧 这就是大家可以看到 我们刚才把它简单的过了一遍 他就相当是把我们整个写文章的 所有的数据分析直接串到里面去了 串到我们这个代码里面去了 那么同样大家可以很明显的看到 在这个地方的话 实际上我们是已经经过了充分的探索对吧 我们对自己要做什么样的数据分析 已经是两岸一区 然后我们对这个结果大概是什么 我们可能也非常清楚了 所以它适合是什么 就是在你的项目最后阶段 知道自己要做什么样的分析 你当时知道自己要呈现什么样的结果的时候 你就从一个程序里 用它来准备你的手稿 当然你在前面要做数据探索的时候 我们就可以用RMAPDAT或是Notebook对吧 我自己比较喜欢是Notebook Notebook的话 它会更加方便 你全部都放在这个HTML里面 非常方便显示 那么大家可以练习一下 比方说自己把RT的结果放进去 然后比方说可以写一下 比方说这个F值是多少对吧 我们能不能引用方向分析的结果 然后能不能把简单项目分析的结果 引用到这里对不对 当然大家可以看到这里有两种方式 一个就是直接自己手动抄对吧 然后另外一个就是我把所有的都是用R的代码 来就是用R的代码来进行替代 这样的话虽然它最后跑出来的时候 它是用一个一个数字把它替代掉对吧 但是它会更加的精确 就相当于说你的结果要是有什么变动的话 你这里是完全不用改的对吧 但像如果说你手动的抄的话 你就会带来一个问题就是 假如说你又增加了一个base 这个结果肯定会变对吧 或者即便它就只是小数点第二位变了对吧 你还得再抄一遍 所以这里会有个取舍看大家自己的偏好 并不是说强制一定说哪一个更好 因为大家的时间和那个 比方说和你的偏好的方式肯定是有区别的 可能你刚开始喜欢抄对吧 后来你抄了10遍20遍之后 你发现还是原来的好 还是用写代码好对吧 你可能就会转到写代码了 那么大家可以自己把这个地方 剩下的部分的话大家就熟悉这个R Markdown的一个 就是整个里面的所有代码 大家有任何问题随时可以就是举手问我或是助教 而这一科内容应该是相当的丰厚 基本上已经是把我们所有前面的内容都共和起来了 所以有可能有些同学对里面的有些内容 还是没有那么清楚 你还可以问 但是核心的问题是要解决这个 Papilla的安装和使用的问题 大家可以尝试把反应时间的 这个数据分析做出来 我现在只做了一步对吧 后面还没有做完 大家可以自己在电脑上把它完善 完善了之后 然后把这个部分反应时间结果填充好 然后再重新的立体一遍 OK 然后顺便说一下下几个的 不第二次小作业 第二次小作业 我昨天还前天还问了大家有没有 注册GitHub 那第二个小作业的这个内容很简单,大家有部分同学可能知道,当然也有可能同学不知道 我们跟现在的 GitHub,我们R客的GitHub相对应的 还有另外一个项目就是把我们的内容转成一个文字的书,对吧 然后可能慢慢的不断改进,说不定我们以后就可以把它变成一个免费的一个 免费的一个电子书可以供所有的人使用 那么它这个项目也是一个开源的,就叫做R4SciBook 那么大家这次的任务是什么呢?就是我们现在这里的 它的GitHub的Repo是在这里,然后所有的文件在这儿 然后这个里面有个Book,这个Book里面就有很多RMD文件 这个RMD文件就是每一课的内容,比方说我们看第三课的内容 那就是全都是TXT对吧,基本上都是TXT 然后里面可能有很多,比方说我们口语化的一些字 因为这是何嘉,我们的助教之一,他用Chart GPT转的对吧 用Chart GPT把我们平时上课的大量的口语就转换成为了文字 所以那里面可能会有很多错误,但是我们目前为止也没有时间来去校正 那么大家的这个任务一方面是熟悉GitHub做一个Contribute 另外也是一个练习,就大家每个人去把这个Fork一遍 就是Fork成自己的,然后你在这里面找到一个小错误 或者你做个小的更改,不是小错误,你做个小的更改 就比方说你看到了,比方说第8课对吧,第8课的内容 然后你发现哪一句话它有错误对吧 哪一句话就是非常口语化,或者你觉得这句话 你就觉得他说的好像不是很好,然后你把它改一改 改完了之后就是做一个Pull request 就是你自己Fork之后,然后你要Pull request到我们这个repo 然后Pull request的这个信息就是你自己的学号 或者是,我觉得,不然用学号,我想用学号 把大家学号都暴露在这个repo公开的场合了 那我们助教后面跟每个学号生成一个随机码 就是每一个学号会有一个随机码发给大家 那么大家会把自己,就是假如说你要Pull request的话 你就把那个随机码填在那个Pull request那个地方 然后我们根据随机码去找到是哪个同学来做了一个Pull request 内容不重要,最重要就是说你要知道如何去Fork 如何去做一个Pull request,明白吗 这是我们第二次小作业的内容 这个小作业大家有没有疑问 大家需要改的只有一个地方啊 就是在这个bookdown files里面有一个book 然后book里面呢,就是有这些RMD的文件 这些RMD的文件,你改任何一个RMD的文件都可以 注意是RMD不是MDR 然后这个RMD你改了之后呢,比方说你就可以把它保存下来 在你自己的repo里面保存下来 然后这样的话你的这个和原来的这个就会有区别了对吧 和原来这个repo就会有区别了 你的就会比我们这个原来repo更新了 这个地方你应该会看到一个contribute那个地方 你点一下contribute,它就会生成一个 就是说你要不要提交一个Pull request 你这个要提交的话呢,你就把自己的我们助教 应该我们很快就会把这个发给大家 就是把助教发给跟你学号对的那个随机码 填到那个pull request commit里面 就做标志,表示我们知道是哪个同学提交了一个pull request 然后合并了之后呢,我们就最后合并到这里面之后呢 大家的名字会出现在这个contribute里面 或者说你们的这个GitHub的姓名会出现在这里 然后呢,你的那个内容后被合并到这里面之后 我们就知道你已经基本上掌握了使用GitHub做这个pull request 这个应该不难吧 然后小组长大家还是可以相互之间讨论一下 核心是让大家会,而不是要把大家难倒 因为我们这个课太多的东西都是需要练习 在练习中你才能够慢慢的掌握 听一遍肯定是水过无痕,就是基本上后面都忘记了 好的,接下来还有20多分钟 大家就练习把这个RT这个部分补充完整 然后看能不能继续把这个PDF给弄出来 OK 老师好,我们还有最后一个小的一个知识点 就是差点忘记告诉大家了 就比方说,大家说我要新建一个RMarkdown 新建一个Papier文档,我应该怎么办? 我应该从哪开始?当我们装了这个包以后的话 我们点这个文档,然后new file,然后点RMarkdown 然后RMarkdown有个from template template里面它就会有API style的manuscript 我们可以看到它这个markdown的template是来自于这个包 就是这个Papier这个包 大家可以看到还有一些其他的,对吧 还有一些其他的模板 但是我们要的就是这个模板,然后点OK就可以了 那么这个时候它就会生成一个新的未命名的模板 这个模板里面就是有我们很多的信息 大家可以跟我们这个基本上是一样的 大家改就行了 大家根据自己的需求去改就可以了 然后不同的模板它其实我们看到的是很小的一部分 那么它内在的可能还有一些其他内容是跟 比方说跟这个NetTag进行兼容的 或者跟markdown的其他部分进行兼容的 这个东西我们很多时候我们作为用户的话 也不需要去了解 除非你真的对这个R的这个包非常感兴趣 你以后想要去了解更多 你可以去翻它的代码 或者在论坛上面或者在这个GitHub上面 跟他们进行互动去问这些问题 但是如果是要解决我们的问题的话 就是我们基本上在这里面通过这个模板 就是我再来一遍 就是新建文件对吧 然后这个R markdown 然后R markdown里面from template 然后再找到这个API style manuscript 然后点OK就可以了 然后一般我们碰到什么问题就可以去 他们自己的这个网站上面去问 或者去GitHub的那个issue上面去提问题 一般来说都是可以的 这个我好像我已经 把那个网址发给大家了 GitHub的这个网址 就是这个Papilla那个GitHub的网址 那个issue是大家可以提问题 其实像这种包都是在开发当中的 它能用 但是它不一定能够满足每个人的所有的需求 所以有的时候你可能有新的需求 有一些很小的一些细节 它是无法满足的 这个时候你可能要去跟开发者交流 或者自己要想一点办法 这是开源软件的一个共同的问题 就是它不是为了它不赚钱 所以做的理论上讲的话 它也没有那么多时间和精力 去专门雇用一个团队来去做所有的售后服务 但是它靠整个开源社区的一个力量 可以把这个软件越做越好 基本上就是这样 好那大家自己感兴趣的话 后面可以把这个RT这个部分形成 就是填写完形成一个更加完美的PDF文档 那么其实主要需要熟悉的部分 就是如何把方向分析做完 对吧 然后把一些内容相应的填进来就可以了 当然大家也可以开始把自己的数据分析 试图搬到RMarkdown里面生成PDF 不断的练习才能够越来越熟练 所以大家不要说等到我所有的东西都搞好之后 我再来去准备也没有必要等 然后你觉得可以开始了 你就开始去不断的练习不断的去捣腾它 R语言它是一个需要动手的 你犯的错误越多 然后你就会越来越熟悉 这我反复跟大家说过的 好那我们今天的课差不多就到这 大家对第二次小作业没有什么问题吧 那个需求那个要求我应该讲清楚了 那么我们后面资料会把每个人的学号 所对应的随机码发到群里面 大家根据自己的学号找随机码 然后提交commit的时候把随机码填上 OK 那我们今天这个课就到这里 希望对大家有所帮助 请不吝点赞 订阅 转发 打赏支持明镜与点点栏目 请不吝点赞 订阅 转发 打赏支持明镜与点点栏目 请不吝点赞 订阅 转发 打赏支持明镜与点点栏目